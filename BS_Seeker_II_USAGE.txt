Examples:

python Preprocessing_genome_II.py -f chr21_hg18.fa -t N -p ~/bowtie-0.10.0/ &


python BS_Seeker_II.py -i LT200R1.end.txt -t N -s 4 -e 35 -p ~/bowtie-0.12.7/ -m 3 -l 20000 -o V2-SE-Dir-SE1-mapping &
python BS_Seeker_II.py -i LT200R1.end.txt -t Y -s 4 -e 35 -p ~/bowtie-0.12.7/ -m 3 -l 20000 -o V2-SE-Undir-SE1-mapping &

=======================================================
Usage: BS_Seeker_Zymo.py [options]

Options:
  -h, --help            show this help message and exit
  -i FILE, --input=FILE
                        Input your read file name (FORMAT: sequences, illumina
                        fastq, qseq,fasta)
  -t TAG, --tag=TAG     Yes for undirectional lib, no for directional [N]
  -s CUTNUMBER1, --start_base=CUTNUMBER1
                        The first base of your read to be mapped [1]
  -e CUTNUMBER2, --end_base=CUTNUMBER2
                        The last cycle number of your read to be mapped [36]
  -a FILE, --adapter=FILE
                        Input text file of your adaptor sequences (to be
                        trimed from the 3'end of the reads). Input 1 seq for
                        dir. lib., 2 seqs for undir. lib. One line per
                        sequence
  -p PATH, --path=PATH  Path to Bowtie [~/bowtie-0.12.7/]
  -d DBPATH, --db=DBPATH
                        Path to Reference genome library (generated in
                        preprocessing genome) [./reference_genome/]
  -m INDEXNAME, --mis=INDEXNAME
                        Number of mismatches (0, 1, 2, ï¿½ ,read length) [3]
  -l NO_SPLIT, --split_line=NO_SPLIT
                        Number of lines per split (the read file will be
                        split into small files for mapping. The result will
                        be merged. [4000000]
  -o OUTFILE, --output=OUTFILE
                        The name of output file [BS_SEEKER_SE_OUTPUT.txt]